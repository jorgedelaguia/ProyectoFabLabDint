<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OQ2+6OVLqJG0uf79VTWD6Xzqp1nay6W5PocraVBGcKpnRj0A97h0N0zatfwOA3zXgA+BSPFwTkKojtjI
        ttiCu20DscjcvHAijLMEwFwA0wHeBSjVQk9O3r18DKCnQHRD+ATCn0UdRNTW1B8INSWrPSQD8VhbnJaa
        ExjtE/INlWPhnpi0s2y4cZygBc8bq5a2lOut3l0vWfwXsg4W4veqFSYAAAAASUVORK5CYIIoAAAAIQAA
        AEIAAAABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAA
        AP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA////
        /4AAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAA
        AP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA/////4AAAAD/////gAAAAP////+AAAAA////
        /4AAAAD/////gAAAAP////+AAAAA/////4AAAAA=
</value>
  </data>
</root>